import{P as l,H as g}from"./proxy-09190287.js";import{A as p,i as y,c as u}from"./index-d6a334bf.js";import{A as h}from"./index-b2a2f86f.js";const f=document.getElementById("nameInput"),w=document.getElementById("submitNameButton"),d=document.getElementById("nameStatus"),c=document.getElementById("mainPage"),m=document.getElementById("nameSection"),s=document.getElementById("principalDisplay"),E=document.getElementById("createOrgButton"),I=document.getElementById("viewOrgButton");let i,a;const b=async()=>{const e=new g;await e.fetchRootKey(),i=p.createActor(y,{agent:e,canisterId:u})},B=async()=>{var n;a=(n=(await h.create()).getIdentity().getPrincipal())==null?void 0:n.toText(),a?s.textContent=`Your Principal: ${a}`:alert("Failed to retrieve principal. Please log in again.")},k=async()=>{try{if(!a)throw new Error("User principal is not defined.");const e=l.fromText(a),t=await i.getUserByPrincipal(e);if(t){const o=t[0];if(o&&o.name){m.style.display="none",c.style.display="block",s.textContent=`Welcome back, ${o.name}!`;return}}const n=prompt("It seems you don't have a name set. Please enter your name:");if(!n){alert("Name is required to proceed.");return}const r=await i.createUserForTesting(n,e);if(r&&r.name)m.style.display="none",c.style.display="block",s.textContent=`Welcome, ${r.name}!`;else throw new Error("Failed to create a new user.")}catch(e){console.error("Error checking user name:",e),alert("An error occurred while checking the user name. Please try again.")}},z=async()=>{try{if(!a)throw new Error("User principal is not defined.");const e=l.fromText(a),t=await i.getMyOrganizations(e);if(!Array.isArray(t))throw new Error("Invalid response format from getMyOrganizations.");const n=document.getElementById("orgList")||document.createElement("div");if(n.id="orgList",n.innerHTML="",c.appendChild(n),t.length>0)t.forEach(r=>{const o=document.createElement("button");o.textContent=r.name,o.onclick=()=>{window.location.href=`./organization.html?orgId=${r.id}`},n.appendChild(o)});else{const r=document.createElement("p");r.textContent="You are not part of any organizations.",n.appendChild(r)}}catch(e){console.error("Error fetching user organizations:",e),alert("Failed to fetch your organizationsâ€”see console for details.")}};B().then(()=>{k().then(()=>{c.style.display==="block"&&z()})});w.addEventListener("click",async()=>{const e=f.value.trim();if(!e){alert("Please enter a valid name.");return}try{const t=l.fromText(a);if(await i.createUserForTesting(e,t))d.style.display="block",d.textContent="Name assigned successfully!",m.style.display="none",c.style.display="block",s.textContent=`Welcome, ${e}!`;else throw new Error("Failed to save name in the backend.")}catch(t){console.error("Error assigning name:",t),alert("An error occurred while assigning your name. Please try again.")}});E.addEventListener("click",async()=>{const e=prompt("Enter the name of the organization:");if(!e){alert("Organization name cannot be empty.");return}try{const t=l.fromText(a),n=await i.createOrganization(t,e);alert(`Organization created with ID: ${n}`)}catch(t){console.error("Error creating organization:",t),alert("An error occurred while creating the organization. Please try again.")}});I.addEventListener("click",()=>{window.location.href="./organizations.html"});b();
